	/******************************************************************************
 *
 * Module: Timer1
 *
 * File Name: timer1.c
 *
 * Description: Source file for the Timer1 driver
 *
 * Author: Ahmed Abd El-Halim
 *
 *******************************************************************************/

#include "timer1.h"
#include "avr/io.h"
#include "common_macros.h"
#include "avr/interrupt.h"

static volatile void (*g_callBackPtr)(void) = NULL_PTR;

ISR(TIMER1_COMPA_vect){
	if(g_callBackPtr != NULL_PTR){
		(*g_callBackPtr)();
	}
}

ISR(TIMER1_OVF_vect){
	if(g_callBackPtr != NULL_PTR){
		(*g_callBackPtr)();
	}
}

void Timer1_init(const Timer1_ConfigType * Config_Ptr){
	TCNT1 = Config_Ptr->initial_value;
	OCR1A = Config_Ptr->compare_value;
	TCCR1A |= (1<<FOC1A) | (1<<FOC1B);
	TCCR1B |= (Config_Ptr->prescaler) | ((Config_Ptr->mode)<<WGM13);
	TIMSK |= 1<<OCIE1A;
}

void Timer1_deInit(void){
	TCNT1 = 0;
	OCR1A = 0;
	TCCR1A = 0;
	TCCR1B = 0;
}
void Timer1_setCallBack(void(*a_ptr)(void)){
	g_callBackPtr = a_ptr;
}
