/******************************************************************************
 *
 * Module: Timer1
 *
 * File Name: timer1.c
 *
 * Description: Source file for the Timer1 driver
 *
 * Author: Ahmed Abd El-Halim
 *
 *******************************************************************************/

#include "timer1.h"
#include "avr/io.h"
#include "common_macros.h"
#include "avr/interrupt.h"

uint16 g_ticks = 0;
uint8 g_counter = 0;
uint16 g_compareValue = 58593;

static volatile void (*g_callBackPtr)(void) = NULL_PTR;

ISR(TIMER1_COMPA_vect){
	g_ticks++;
	if(g_ticks == g_compareValue){
		g_counter++;
		if(g_counter == 1){
			g_compareValue = 11718;
			if(g_callBackPtr != NULL_PTR){
				(*g_callBackPtr)();
			}
		}
		else if(g_counter == 2){
			g_compareValue = 58593;
			if(g_callBackPtr != NULL_PTR){
				(*g_callBackPtr)();
			}
		}
		else if(g_counter == 3){
			Timer1_deInit();
			g_counter = 0;
		}
		g_ticks = 0;
	}
}

ISR(TIMER1_OVF_vect){
	if(g_callBackPtr != NULL_PTR){
		(*g_callBackPtr)();
	}
}

void Timer1_init(const Timer1_ConfigType * Config_Ptr){
	TCNT1 = Config_Ptr->initial_value;
	OCR1A = Config_Ptr->compare_value;
	TCCR1A |= ((Config_Ptr->mode)<<4) | (FAST_PWM_8_BITS & 3);
	TCCR1B |= (Config_Ptr->prescaler) | ((FAST_PWM_8_BITS & 0x0C)<<3);
	TIMSK |= 1<<OCIE1A;
}

void Timer1_deInit(void){
	TCNT1 = 0;
	OCR1A = 0;
	TCCR1A = 0;
	TCCR1B = 0;
}
void Timer1_setCallBack(void(*a_ptr)(void)){
	g_callBackPtr = a_ptr;
}
